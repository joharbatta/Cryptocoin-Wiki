{"version":3,"sources":["Header.js","components/Form.js","components/DisplayCoin.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Form","state","name","changeHandler","e","setState","target","value","submitHandler","preventDefault","props","add","onSubmit","this","type","placeholder","onChange","bind","Component","DisplayCoin","details","id","symbol","description","descr_elem","nametolow","toLowerCase","addcoin","namereceived","fetch","then","response","json","data","console","log","coins","en","ReactHtmlParser","Coindetails","href","links","homepage","src","image","large","alt","country_origin","genesis_date","market_cap_rank","coingecko_rank","coingecko_score","developer_score","community_score","liquidity_score","public_interest_score","App","res","coinsList","length","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d5bd768.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\nconst Header = function() {\r\n    return (\r\n        <div className=\"header\">\r\n        <div>Crypto Wiki</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nclass Form extends Component {\r\n    state = {\r\n        name: null\r\n    }\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.props.add(this.state.name);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form\">\r\n                <form onSubmit={this.submitHandler} >\r\n                    <input type=\"text\" placeholder=\"Enter the Crypto Currency Name\" className=\"form-input\" \r\n                    onChange={this.changeHandler.bind(this)}></input>\r\n                    <button className=\"form-btn\">Get Info About Coin</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nclass DisplayCoin extends Component {\r\n    state = {\r\n        details: [\r\n            {\r\n                id: null,\r\n                symbol: null,\r\n                name: null\r\n            }\r\n        ]\r\n    }\r\n    description=\"\";\r\n    descr_elem=\"\";\r\n    nametolow = (name) => {\r\n        let id = name.toLowerCase();\r\n        return (id);\r\n    }\r\n    addcoin = (namereceived) => {\r\n        const id = this.nametolow(namereceived);\r\n            fetch('https://api.coingecko.com/api/v3/coins/'+id)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ details: data }));\r\n             console.log(id)\r\n    } \r\n    render() {\r\n        const coins = this.state.details;\r\n        if(coins.name!=null)\r\n        {\r\n            this.description=coins.description.en;\r\n            this.descr_elem= ReactHtmlParser(this.description);\r\n        }\r\n        const Coindetails = (coins.name != null) ?\r\n            (\r\n                <div>\r\n                    <Form add={this.addcoin} />\r\n                    <div className=\"panel-container\">\r\n                        <div className=\"panel-title\">\r\n                            <a href={coins.links.homepage[0]} target=\"blank\">\r\n                            <span>{this.state.details.name}-{this.state.details.symbol}</span>\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className=\"left-panel\">\r\n                                <img src={this.state.details.image.large} alt={this.state.details.name}></img>\r\n                                <div className=\"left-panel-description\">\r\n                                    Country Of Origin : {this.state.details.country_origin}<br /><br />\r\n                                    Date of Appearance : {this.state.details.genesis_date}<br /><br />\r\n                                    Market Cap Rank : {this.state.details.market_cap_rank}<br /><br />\r\n                                    Coin Gecko-<br />\r\n                                    Rank : {this.state.details.coingecko_rank}<br />\r\n                                    Score : {this.state.details.coingecko_score}<br /><br />\r\n                                    Developer Score : {this.state.details.developer_score}<br /><br />\r\n                                    Community Score : {this.state.details.community_score}<br /><br />\r\n                                    Liquidity Score : {this.state.details.liquidity_score}<br /><br />\r\n                                    Public Interest Score : {this.state.details.public_interest_score}<br /><br />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"body-description\">\r\n                                {this.descr_elem}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            ) :\r\n            (\r\n                <div>\r\n                    <Form add={this.addcoin} />\r\n                </div>\r\n            );\r\n        return (\r\n            <div>\r\n                {Coindetails}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DisplayCoin;\r\n//joharbatta","import React, { Component } from 'react';\nimport Header from './Header';\nimport DisplayCoin from \"./components/DisplayCoin\";\nimport \"./style.css\"\n\nclass App extends Component {\n  state = {\n    coins: []\n  }\n  async componentDidMount() {\n      const  url='https://api.coingecko.com/api/v3/coins/list';\n      const res=await fetch(url);\n      const data=await res.json();\n      console.log(data)\n      // console.log(data.results[0].name.first);\n      this.setState({coins: data});\n  }\n  render() {\n    const { coins } = this.state;\n    console.log(this.state)\n    const coinsList = (coins.length > 0) ? (\n      <DisplayCoin />\n    ) :\n      (\n        <div>\n          <div className=\"loading-content\"> Loading The Coins List </div>\n        </div>\n      );\n\n    return (\n      <div basename=\"/Cryptocoin-Wiki\">\n        <Header />\n        {coinsList}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}